version: 2

models:
# Mart Models (Final Analytics Tables)
  - name: mart_top_tracks
    description: "Top 100 most popular tracks with comprehensive artist context for reporting dashboards"
    columns:
      - name: track_id
        description: "Unique Spotify track identifier for joining with other systems"
        tests: [not_null, unique]
      - name: track_name
        description: "User-friendly track title as displayed in Spotify"
        tests: [not_null]
      - name: artist_name
        description: "Primary artist name associated with this track"
        tests: [not_null]
      - name: popularity_rank
        description: "Ranking from 1-100 based on track popularity score (1 = most popular)"
        tests: 
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
              quote: false
      - name: track_popularity
        description: "Spotify's algorithmic popularity score (0-100, updated regularly)"
      - name: popularity_range
        description: "Categorical grouping based on popularity score (Very Popular, Popular, Moderate, Low)"
        tests:
          - accepted_values:
              values: ['Very Popular', 'Popular', 'Moderate', 'Low']

  - name: mart_artist_summary
    description: "Comprehensive artist analytics with performance metrics and tier classifications"
    columns:
      - name: artist_id
        description: "Unique Spotify artist identifier for cross-system integration"
        tests:
          - not_null
          - unique
          - relationships:
              to: ref('stg_top_artists')
              field: artist_id
      - name: artist_name
        description: "Official artist name as registered in Spotify's database"
        tests: [not_null]
      - name: artist_followers
        description: "Current total follower count on Spotify platform"
        tests: [not_null]
      - name: num_tracks
        description: "Total number of tracks by this artist in our dataset"
        tests: 
          - not_null
          - dbt_utils.expression_is_true:
              expression: "num_tracks > 0"
      - name: avg_track_popularity
        description: "Mean popularity score across all tracks by this artist"
      - name: artist_tier
        description: "Classification based on follower count (Mega Star, Major Artist, Popular Artist, Emerging Artist, New Artist)"
        tests:
          - not_null
          - accepted_values:
              values: ['Mega Star', 'Major Artist', 'Popular Artist', 'Emerging Artist', 'New Artist']
      - name: consistency_rating
        description: "Measure of how consistent track popularity is (Very Consistent, Consistent, Variable, Highly Variable)"
        tests:
          - accepted_values:
              values: ['Very Consistent', 'Consistent', 'Variable', 'Highly Variable']

  - name: mart_user_daily_plays
    description: "Daily aggregated listening metrics per user with data quality scoring (incremental table)"
    columns:
      - name: pk
        description: "Primary key combining user_id and play_date for unique daily records"
        tests: [unique, not_null]
      - name: user_id
        description: "Anonymized user identifier linking to listener profiles"
        tests: [not_null]
      - name: play_date
        description: "Calendar date of listening activity (partitioned for performance)"
        tests: [not_null]
      - name: plays
        description: "Total number of track plays by this user on this date"
        tests: 
          - not_null
          - dbt_utils.expression_is_true:
              expression: plays > 0
      - name: distinct_tracks
        description: "Count of unique tracks played (measure of listening diversity)"
        tests: [not_null]
      - name: distinct_artists
        description: "Count of unique artists played (measure of artist diversity)"
        tests: [not_null]
      - name: listening_duration_seconds
        description: "Total time span from first to last play in seconds"
      - name: data_quality_score
        description: "Computed score (0-1) indicating completeness of metadata for this user-date"
        tests:
          - dbt_utils.expression_is_true:
              expression: "data_quality_score >= 0 and data_quality_score <= 1"